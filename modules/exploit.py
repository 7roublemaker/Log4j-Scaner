import re
import sys
import time
import socket
import codecs
import getopt
import requests
import warnings
import threading
import subprocess
import multiprocessing
from modules.log import logErr
warnings.filterwarnings("ignore")

helper = '''
Exploit Options:
    -h
    \tShow helper
    -t <target.domain/target.ip>
    \tSingle target
    -f <filename>
    \tTarget file 
    -s <site>
    \tThe site of vulnerability in the http packet
    -e <reverse/webshell/cs>
    \tExploit type:
    \t  reverse: reverse shell
    \t  webshell: memory webshell
    \t  cs: cobalt strike backdoor
    -d <filename/IP:PORT>
    \tThe input of exploit:
    \t  <filename>: webshell file or cobalt strike backdoor
    \t  <IP:PORT>: listener of reverse shell
'''


def exploit(argv):
    targets = []
    try:
        opts, args = getopt.getopt(argv, "ht:f:e:d:",
                                   ["help", 'target=', 'file=', 'exploit=', 'data='])
        for opt, arg in opts:
            if opt == '-h' or opt == '--help':
                print(helper)
                raise Exception()
            elif opt == '-t' or opt == '-target':
                targets.append(arg)
            elif opt == '-f' or opt == '--file':
                tmp_targets = codecs.open(arg, 'r', 'utf-8').read().replace("\r", "").replace("\t",'').replace(" ", '').split('\n')
                for t in tmp_targets:
                    targets.append(t)
            elif opt == '-s' or opt == '--site':
                1
    except Exception as e:
        print(helper)
        logErr(" [ExploitError] " + e)


def HTTPSiteHandle(site):
    1
    requests.get(site)